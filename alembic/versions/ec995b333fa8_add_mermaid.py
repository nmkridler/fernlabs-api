"""add mermaid

Revision ID: ec995b333fa8
Revises: 001
Create Date: 2025-08-23 15:14:22.424989

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ec995b333fa8'
down_revision = '001'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('profiles')
    op.add_column('artifacts', sa.Column('artifact_metadata', sa.JSON(), nullable=True))
    op.drop_column('artifacts', 'metadata')
    op.add_column('projects', sa.Column('mermaid_chart', sa.Text(), nullable=True))
    op.drop_column('projects', 'project_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('projects', sa.Column('project_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_column('projects', 'mermaid_chart')
    op.add_column('artifacts', sa.Column('metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_column('artifacts', 'artifact_metadata')
    op.create_table('profiles',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('full_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subscription_tier', sa.TEXT(), server_default=sa.text("'free'::text"), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('avatar_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('github_username', sa.TEXT(), autoincrement=False, nullable=True),
    sa.CheckConstraint("subscription_tier = ANY (ARRAY['free'::text, 'pro'::text])", name='profiles_subscription_tier_check'),
    sa.ForeignKeyConstraint(['id'], ['auth.users.id'], name='profiles_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='profiles_pkey')
    )
    # ### end Alembic commands ###
